/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import HelperClasses.BudgetsMonthly;
import HelperClasses.Transaction;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import static java.lang.String.valueOf;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author larisasabalin
 */
public class Details extends javax.swing.JDialog {

    private static Frames.Global gl;
    private static Welcome welcome;

    /**
     * Creates new form SeeBudget
     */
    public Details(java.awt.Frame parent, boolean modal, Global gl, Welcome welcome) {
        super(parent, modal);
        setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        try {
            addRowToTable();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    "Error connecting to database(Details): " + ex.getMessage()
                            +"\nSorry no data to display for now",
                    "Database error",
                    JOptionPane.ERROR_MESSAGE);
        }
        catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null,
                    ":) A null pointer.. not sure where :)" + ex.getMessage(),
                    "Something went wrong",
                    JOptionPane.ERROR_MESSAGE);
        }
        this.welcome = welcome;
        this.gl = gl;

        BudgetsMonthly budget;
        initComponents();
    }

    public void setDetailsComboBox(String choice) {
        Details_cmbChoice.setSelectedItem(choice);
    }

    public void addRowToTable() throws SQLException {
       
        DefaultTableModel model = (DefaultTableModel) dlgDetail_tblData.getModel();
        if (Details_cmbChoice.getSelectedItem()=="Expenses"){
        ArrayList<Transaction> listExpenses
                = gl.db.updateTableExpenses(gl.currentUser.getId());
        Object rowDataExpenses[] = new Object[3];
        for (int i = 0; i < listExpenses.size(); i++) {
            rowDataExpenses[0] = listExpenses.get(i).getTransDate();
            rowDataExpenses[1] = listExpenses.get(i).getAmount();
            rowDataExpenses[2] = listExpenses.get(i).getCategory();
            model.addRow(rowDataExpenses);
        }}
        else if (Details_cmbChoice.getSelectedItem()=="Income"){
        ArrayList<Transaction> listIncome
                = gl.db.updateTableIncome(gl.currentUser.getId());
        Object rowDataIncome[] = new Object[3];
        for (int i = 0; i < listIncome.size(); i++) {
            rowDataIncome[0] = listIncome.get(i).getTransDate();
            rowDataIncome[1] = listIncome.get(i).getAmount();
            rowDataIncome[2] = listIncome.get(i).getCategory();
            model.addRow(rowDataIncome);
        }}
        else if (Details_cmbChoice.getSelectedItem()=="Budget"){
        ArrayList<BudgetsMonthly> listBudget
                = gl.db.updateTableBudget(gl.currentUser.getId());
        Object rowDataBudget[] = new Object[3];
        for (int i = 0; i < listBudget.size(); i++) {
            rowDataBudget[0] = listBudget.get(i).getMonthOfYear();
            rowDataBudget[1] = listBudget.get(i).getAmount();
            rowDataBudget[2] = listBudget.get(i).getCatName();
            model.addRow(rowDataBudget);
        }}
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        lblStatus6 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        dlgDetail_tblData = new javax.swing.JTable();
        jLabel34 = new javax.swing.JLabel();
        Details_cmbChoice = new javax.swing.JComboBox<>();
        jMenuBar7 = new javax.swing.JMenuBar();
        mnuOperations6 = new javax.swing.JMenu();
        frmSeeBudget_miAddIncome6 = new javax.swing.JMenuItem();
        frmSeeBudget_miAddExpenses6 = new javax.swing.JMenuItem();
        frmSeeBudget_miSeeBudgets6 = new javax.swing.JMenuItem();
        frmSeeBudget_miSeeExpenses6 = new javax.swing.JMenuItem();
        frmSeeBudget_miSeeIncome6 = new javax.swing.JMenuItem();
        mnuExport6 = new javax.swing.JMenu();
        frmSeeBudget_miCSV6 = new javax.swing.JMenuItem();
        frmSeeBudget_mnuExit6 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblStatus6.setText("Status");
        getContentPane().add(lblStatus6, java.awt.BorderLayout.PAGE_END);

        jPanel7.setBackground(new java.awt.Color(204, 204, 255));

        dlgDetail_tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "When?", "How much?", "On what?"
            }
        ));
        jScrollPane5.setViewportView(dlgDetail_tblData);

        jLabel34.setText("You choice ");

        Details_cmbChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Income", "Expenses", "Budget" }));
        Details_cmbChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Details_cmbChoiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Details_cmbChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Details_cmbChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel7, java.awt.BorderLayout.CENTER);

        mnuOperations6.setText("Operations");

        frmSeeBudget_miAddIncome6.setText("Add Income");
        frmSeeBudget_miAddIncome6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frmSeeBudget_miAddIncome6ActionPerformed(evt);
            }
        });
        mnuOperations6.add(frmSeeBudget_miAddIncome6);

        frmSeeBudget_miAddExpenses6.setText("Add Expenses");
        frmSeeBudget_miAddExpenses6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frmSeeBudget_miAddExpenses6ActionPerformed(evt);
            }
        });
        mnuOperations6.add(frmSeeBudget_miAddExpenses6);

        frmSeeBudget_miSeeBudgets6.setText("See Budget");
        frmSeeBudget_miSeeBudgets6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frmSeeBudget_miSeeBudgets6ActionPerformed(evt);
            }
        });
        mnuOperations6.add(frmSeeBudget_miSeeBudgets6);

        frmSeeBudget_miSeeExpenses6.setText("See Expenses");
        frmSeeBudget_miSeeExpenses6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frmSeeBudget_miSeeExpenses6ActionPerformed(evt);
            }
        });
        mnuOperations6.add(frmSeeBudget_miSeeExpenses6);

        frmSeeBudget_miSeeIncome6.setText("See Income");
        frmSeeBudget_miSeeIncome6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frmSeeBudget_miSeeIncome6ActionPerformed(evt);
            }
        });
        mnuOperations6.add(frmSeeBudget_miSeeIncome6);

        jMenuBar7.add(mnuOperations6);

        mnuExport6.setText("Export");

        frmSeeBudget_miCSV6.setText("to CSV");
        frmSeeBudget_miCSV6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frmSeeBudget_miCSV6ActionPerformed(evt);
            }
        });
        mnuExport6.add(frmSeeBudget_miCSV6);

        jMenuBar7.add(mnuExport6);

        frmSeeBudget_mnuExit6.setText("Exit");
        frmSeeBudget_mnuExit6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                frmSeeBudget_mnuExit6MouseClicked(evt);
            }
        });
        jMenuBar7.add(frmSeeBudget_mnuExit6);

        setJMenuBar(jMenuBar7);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void frmSeeBudget_miSeeBudgets6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frmSeeBudget_miSeeBudgets6ActionPerformed
        Details details = new Details(null, true, gl, welcome);
        details.setDetailsComboBox("Budget");
        gl.closeWindow(this);
        details.pack();
        details.setVisible(true);    }//GEN-LAST:event_frmSeeBudget_miSeeBudgets6ActionPerformed

    private void frmSeeBudget_miAddIncome6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frmSeeBudget_miAddIncome6ActionPerformed
        AddIncome income = new AddIncome(null, true, gl, welcome);
        income.pack();
        income.setVisible(true);
        gl.closeWindow(this);

    }//GEN-LAST:event_frmSeeBudget_miAddIncome6ActionPerformed

    private void Details_cmbChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Details_cmbChoiceActionPerformed
        try {
            addRowToTable();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    "Error connecting to database: " + ex.getMessage()
                            +"\nSorry no data to display for now",
                    "Database error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Details_cmbChoiceActionPerformed

    private void frmSeeBudget_miAddExpenses6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frmSeeBudget_miAddExpenses6ActionPerformed
        AddExpenses expense = new AddExpenses(null, true, gl, welcome);
        expense.pack();
        expense.setVisible(true);
        gl.closeWindow(this);
    }//GEN-LAST:event_frmSeeBudget_miAddExpenses6ActionPerformed

    private void frmSeeBudget_miSeeExpenses6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frmSeeBudget_miSeeExpenses6ActionPerformed
        Details details = new Details(null, true, gl, welcome);
        details.setDetailsComboBox("Expenses");
        gl.closeWindow(this);
        details.pack();
        details.setVisible(true);    }//GEN-LAST:event_frmSeeBudget_miSeeExpenses6ActionPerformed

    private void frmSeeBudget_miSeeIncome6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frmSeeBudget_miSeeIncome6ActionPerformed
        Details details = new Details(null, true, gl, welcome);
        details.setDetailsComboBox("Income");
        gl.closeWindow(this);
        details.pack();
        details.setVisible(true);     }//GEN-LAST:event_frmSeeBudget_miSeeIncome6ActionPerformed

    private void frmSeeBudget_miCSV6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frmSeeBudget_miCSV6ActionPerformed
        gl.chooseFileCSV(fileChooser);
         int ret = fileChooser.showDialog(null, "Save to the file");

        if (ret == JFileChooser.APPROVE_OPTION) {
            try {
                File file = fileChooser.getSelectedFile();
                String filename = file.getAbsolutePath();

                if (!filename.matches(".+\\.[A-Za-z0-9]{1,20}") /*file.getName().toLowerCase().endsWith(".csv")*/) {

                    file = new File(filename + ".csv");
                }
                try (PrintWriter out = new PrintWriter(new FileWriter(file))) {
                    ArrayList<Transaction> list = gl.db.getAllTransactions();
                    for (Transaction t : list) {
                        out.printf("%.2f;%.2f;%s\n", t.getCategory(), t.getAmount(), t.getTransDate());
                    }
                     ArrayList<BudgetsMonthly> listBuget = gl.db.getAllBudgets();
                    for (BudgetsMonthly t : listBuget) {
                        out.printf("%.2f;%.2f;%s\n", t.getCatName(), t.getAmount(), t.getMonthOfYear());
                    }
                }
            } catch (IOException | SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,
                        "Error saving data to file:\n" + ex.getMessage(),
                        "File saving error",
                        JOptionPane.ERROR_MESSAGE);
            }

        }

        gl.closeWindow(this);
    }//GEN-LAST:event_frmSeeBudget_miCSV6ActionPerformed

    private void frmSeeBudget_mnuExit6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frmSeeBudget_mnuExit6MouseClicked
        gl.closeApp();
    }//GEN-LAST:event_frmSeeBudget_mnuExit6MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                Details dialog = new Details(null, true, gl, welcome);
                dialog.setVisible(true);
                /*dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });*/
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Details_cmbChoice;
    private javax.swing.JTable dlgDetail_tblData;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenuItem frmSeeBudget_miAddExpenses6;
    private javax.swing.JMenuItem frmSeeBudget_miAddIncome6;
    private javax.swing.JMenuItem frmSeeBudget_miCSV6;
    private javax.swing.JMenuItem frmSeeBudget_miSeeBudgets6;
    private javax.swing.JMenuItem frmSeeBudget_miSeeExpenses6;
    private javax.swing.JMenuItem frmSeeBudget_miSeeIncome6;
    private javax.swing.JMenu frmSeeBudget_mnuExit6;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JMenuBar jMenuBar7;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblStatus6;
    private javax.swing.JMenu mnuExport6;
    private javax.swing.JMenu mnuOperations6;
    // End of variables declaration//GEN-END:variables
}
